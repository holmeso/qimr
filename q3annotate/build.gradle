version = '1.0'

def mainclass = 'au.edu.qimr.qannotate.Main'
def scriptname = 'q3annotate'
def isExecutable = true

repositories {
        flatDir {
                        dirs '/Users/christix/Documents/Eclipse/sourceForge/trunk/adamajava/lib'
                        dirs '/Users/christix/Documents/Eclipse/sourceForge/trunk/adamajava/qpicard/build/lib'
                        dirs '/Users/christix/Documents/Eclipse/sourceForge/trunk/adamajava/qcommon/build/lib'
                        dirs '/Users/christix/Documents/Eclipse/sourceForge/trunk/adamajava/qmaftools/build/lib'
                        dirs '/home/genomelocal/devel/adamajava/adamajava/lib'
                        dirs '/home/genomelocal/devel/adamajava/adamajava/adama/build/lib'
                        dirs '../lib'
                }
}

dependencies {
    configurations.compile.transitive = true
    compile name: 'htsjdk', version: '1.140'	
    compile name: 'jopt-simple', version: '4.6'
    compile name: 'snpEff', version: '4.0e'	
    testCompile name: 'junit', version: '4.10'

    compile name: 'qpicard', version: '1.1'
    compile name: 'qcommon', version: '0.2'
    compile name: 'qio', version: '0.1pre'
//    compile name: 'qmaftools', version: '0.2'
    
}

jar.doFirst {
  def classpath = configurations.runtime.collect { it.name }.join(' ')
  jar {
     manifest {
        attributes 'Implementation-Title': project.name,
                    'Implementation-Version': "$version ($svnVersion)",
                   'SVN-Version': svnVersion,
                   'Built-By': System.properties['user.name'],
                   'Date': new java.util.Date().toString(),
                   'Main-Class' : mainclass,
                   'Class-Path' : classpath
     }
  }
}

build.doLast {
    def jarname = project.name
    ant {
       echo(file: "build/flat/${scriptname}", message: "#!/bin/bash\njava -jar ${jarname}-${version}.jar \$@")
       chmod(file: "build/flat/${scriptname}", perm: "u+rwx")
    }
    copy {
       from configurations.compile
       from 'build/lib'
       into file('build/flat')
    }
}
